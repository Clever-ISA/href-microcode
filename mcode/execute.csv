microop,fmt,description, operands
endexec,00000000000000000000000000000000,end of microop list,
ld    ,000000010oo00000aaa0000000uu0000,load operand o into the input a for unit u, o: Operand number. a: Input Number. u: Unit Number.
rdreg ,00000010rrrrrrrraaa0000000uu0000,read register r into input a for unit u, r: Register Number. a: Input Number. u: Unit Number.
rdregh,0000001100000000aaa0000000uu0000,read the (general purpose) register designated in h into input a for unit u, a: Input Number. u: Unit Number.
rdimm ,00000100iiiiiiiiaaajjjjjjjuu0000,read the 15-bit immediate value ij into input a for unit u, i: Immediate high 8-bits. a: Input number. j: Immediate low 7-bits. u: Unit Number.
rdindr,00000101rrrrrrrraaa0000000uu0sss,read the value from the memory address pointed to by register r into input a for unit u, r: Register Number. a: Immediate Number. u: Unit Number. s: Size Control. 

st    ,000100010oo00000aaa0000000uu0000,store output a from unit u into operand o, o: Operand Number. a: Output Number. u: Unit Number.
wrreg ,00010010rrrrrrrraaa0000000uu0000,store output a from unit u into register r, r: Register Number. a: Output Number. u: Unit Number.
wrregh,0001001100000000aaa0000000uu0000,store output a from unit u into the (general purpose) register designated by h, a: Output Number. u: Unit Number.
wrindr,00010101rrrrrrrraaa0000000uu0sss,stores output a from unit u into the memory address pointed to by r, r: Register Number. a: Immediate Number. u: Unit Number. s: Size Control. 

staf  ,00100000000000000pp0000000uu0000,stores the p'th position flags result from unit u into the flags register, p: flags position. u: Unit Number.
stafr ,00100001rrrrrrrr0pp0000000uu0000,stores the p'th position flags result from unit u into register r, r: Register Number. p: flags position. u: Unit Number.
stafo ,001000100oo000000000000000uu0000,stores the full flags result from unit u into operand o, o: Operand Number. u: Unit Number
scf   ,00100011000fffff000mmmmm00000000,for each flag set in mask store the corresponding value f in flags, f: Flag value. m: flags mask.

xxu   ,0011000000000000fff0000000uu0000, Executes function f on unit u, f: Unit-specific Function Number. u: Unit Number.
xxu2  ,00110001ggg00000fff0vv0000uu0000, Executes function f on unit u simultaneously to function g on unit v, g: Second unit function number. f: First unit function number. v: Second unit number. u: First unit number.
txiov ,00110010bbb00000aaa0vv0000uu0000, Transfers output b from unit v to input a for unit u, b: Second unit output number. a: First unit input number. v: Second unit number. u: First Unit Number.

mxa    ,01000000oo0000000000000000000000, Monitor exclusive access to memory operand o, o: Operand Number.
mxaindr,01000001rrrrrrrr0000000000000sss, Monitor exclusive access to address range given by r and s, r: Register Number. s: Size Control
lxa    ,01000010oo0000000000000000000000, Monitor exclusive access to memory operand o, o: Operand Number.
lxaindr,01000011rrrrrrrr0000000000000sss, Monitor exclusive access to address range given by r and s, r: Register Number. s: Size Control
uxa    ,01000100oo0000000000000000000000, Monitor exclusive access to memory operand o, o: Operand Number.
uxaindr,01000101rrrrrrrr0000000000000sss, Monitor exclusive access to address range given by r and s, r: Register Number. s: Size Control



rxc   ,01110000xxxx00000000000000000000, Raise Exception x in processor, x: Exception Number.
empstat,01110001ssss0000000000000000000, Enter Processor State s, s: State Number (0: Halted. 1: Paused).