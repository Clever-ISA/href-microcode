// und
begin instruction 0x000
begin decode
    operands 0
    hvalid_mask 0xf
end decode
begin deps
end deps
begin execute
    rxc UND
end execute
end instruction

// add 

begin instruction 0x001
begin decode
    operands 2
    hvalid_mask 0x9
    prefix 0x400
end decode
begin deps
    rw 0
    rd 1
    xu alu 0
end deps
begin execute
    chiop 0, rxc UND
    chiop 1, rxc UND
    chwr  0, rxc UND
    chrd  1, rxc UND
    chopsmp rxc UND
    chh 0x8, lxa 0
    lda 0, 0
    lda 1, 1
    ldas 1
    xalu add
    sta 0, 0
    chnh 0x1, staf
    chh 0x8, ulxa 0
end execute
end instruction

// sub

begin instruction 0x002
begin decode
    operands 2
    hvalid_mask 0x9
    prefix 0x400
end decode
begin deps
    rw 0
    rd 1
    xu alu 0
end deps
begin execute
    chiop 0, rxc UND
    chiop 1, rxc UND
    chwr  0, rxc UND
    chrd  1, rxc UND
    chopsmp rxc UND
    chh 0x8, lxa 0
    lda 0, 0
    lda 1, 1
    ldas 1
    xalu sub
    sta 0, 0
    chnh 0x1, staf
    chh 0x8, ulxa 0
end execute
end instruction

// and

begin instruction 0x003
begin decode
    operands 2
    hvalid_mask 0x9
    prefix 0x400
end decode
begin deps
    rw 0
    rd 1
    xu alu 0
end deps
begin execute
    chiop 0, rxc UND
    chiop 1, rxc UND
    chwr  0, rxc UND
    chrd  1, rxc UND
    chopsmp rxc UND
    chh 0x8, lxa 0
    lda 0, 0
    lda 1, 1
    ldas 1
    xalu and
    sta 0, 0
    chnh 0x1, staf
    chh 0x8, ulxa 0
end execute
end instruction

// or

begin instruction 0x004
begin decode
    operands 2
    hvalid_mask 0x9
    prefix 0x400
end decode
begin deps
    rw 0
    rd 1
    xu alu 0
end deps
begin execute
    chiop 0, rxc UND
    chiop 1, rxc UND
    chwr  0, rxc UND
    chrd  1, rxc UND
    chopsmp rxc UND
    chh 0x8, lxa 0
    lda 0, 0
    lda 1, 1
    ldas 1
    xalu or
    sta 0, 0
    chnh 0x1, staf
    chh 0x8, ulxa 0
end execute
end instruction

// xor

begin instruction 0x005
begin decode
    operands 2
    hvalid_mask 0x9
    prefix 0x400
end decode
begin deps
    rw 0
    rd 1
    xu alu 0
end deps
begin execute
    chiop 0, rxc UND
    chiop 1, rxc UND
    chwr  0, rxc UND
    chrd  1, rxc UND
    chopsmp rxc UND
    chh 0x8, lxa 0
    lda 0, 0
    lda 1, 1
    ldas 1
    xalu xor
    sta 0, 0
    chnh 0x1, staf
    chh 0x8, ulxa 0
end execute
end instruction

// mov

begin instruction 0x008
begin decode
    operands 2
    hvalid_mask 0x0
    prefix 0x400
end decode
begin deps
    wr 0
    rd 1
    xu alu 0
end deps
begin execute
    chwr 0, rxc UND
    chrd 1, rxc UND
    chopsmp rxc UND
    lda 1, 0
    xalu pass
    sta 0, 0
end execute
end instruction 

// lea

begin instruction 0x009
begin decode
    operands 2
    hvalid_mask 0x0
end decode
begin deps
    wr 0
    rda 1
    xu alu 0
end deps
begin execute
    chwr 0, rxc UND
    chmo 1, rxc UND
    cma 1, 0
    xalu pass
    sta 0, 0
end execute
end instruction

// mov (left specialization)

begin instruction 0x00A
begin decode
    operands 1
    hvalid_mask 0xF
    prefix 0x400
end decode
begin deps
    rd 0
    wrregh
    xu alu 0
end deps
begin execute
    chrd 0, rxc UND
    lda 0, 0
    xalu pass
    wrregh 0
end execute
end instruction

// mov (right specialization)

begin instruction 0x00B
begin decode
    operands 1
    hvalid_mask 0xF
    prefix 0x400
end decode
begin deps
    wr 0
    rdregh
    xu alu 0
end deps
begin execute
    chwr 0, rxc UND
    rdregh 0
    xalu pass
    sta 0, 0
end execute
end instruction

// lea (left specialization)

begin instruction 0x00C
begin decode
    operands 1
    hvalid_mask 0xF
end decode
begin deps
    rda 0
    wrregh
    xu alu 0
end deps
begin execute
    chmeo 0, rxc UND
    cma 0, 0
    xalu pass
    wrregh 0
end execute
end instruction

// nop (0 operands)

begin instruction 0x010
begin decode
    operands 0
    hvalue_mask 0xF
end decode
begin deps
end deps
begin execute
end execute

// nop (1 operand)

begin instruction 0x011
begin decode
    operands 1
    hvalue_mask 0xF
end decode
begin deps
end deps
begin execute
end execute

// nop (2 operands)

begin instruction 0x012
begin decode
    operands 2
    hvalue_mask 0xF
end decode
begin deps
end deps
begin execute
end execute

// nop (3 operands)

begin instruction 0x013
begin decode
    operands 3
    hvalue_mask 0xF
end decode
begin deps
end deps
begin execute
end execute

// push
begin instruction 0x014
begin decode
    operands 1
    hvalue_mask 0
end decode
begin deps
    rd 0
    rwreg r7
    wrmem
    xu alu 0
    xu alu 0
end deps
begin execute
    chnvop 0, rxc UND
    chrd 0, rxc UND
    tswrindr r7
    lda 0, 0
    xalu pass 0
    rdreg r7, 0, 1
    ldimm 8, 1, 1
    xalu sub 1
    wrreg r7, 0, 1
    wrindr r7, 8, 0, 0
end execute
end instruction

// pop
begin instruction 0x015
begin decode
    operands 1
    hvalue_mask 0
end decode
begin deps
    wr 0
    rwreg r7
    rdmem
    xu alu 0
    xu alu 0
end deps
begin execute
    chnvop 0, rxc UND
    chwr 0, rxc UND
    tsrdindr r7
    rdindr r7, 8, 0, 0
    rdreg r7, 0, 1
    ldimm 8, 1, 1
    xalu pass 0
    xalu add 1
    wr 0, 0, 0
    wrreg r7, 0, 1
end execute


// xchg
begin instruction 0x200
begin decode
    operands 2
    hvalue_mask 0
end decode
begin deps
    rw 0
    rw 1
    xu alu 0
end deps
begin execute
    chrw 0, rxc UND
    chrw 1, rxc UND
    chsmp, rxc UND
    lxa 0
    lxa 1
    rd 0, 0
    rd 1, 1
    xalu pass
    wr 0, 1
    wr 1, 0
    uxa 1
    uxa 0
end execute

// cmpxchg 
begin instruction 0x201
begin decode 
    operands 3
    hvalue_mask 0
end decode
begin deps
    rw 0
    rw 1
    xu alu 0
    xu alu 0
end deps
begin execute
    chrw 0, rxc UND
    chrw 1, rxc UND
    chrd 2, rxc UND
    chsmp rxc UND
    lxa 0
    rd 0, 0
    rd 0, 0, 1
    rd 1, 1
    rd 1, 1, 1
    rd 2, 2, 1
    xalu andn 0
    xalu pass 1
    staf 0x1, 0
    chfalst 0x1, wr 0, 2, 1
    chfalcl 0x1, wr 1, 0, 1
    uxa 0
end execute
end instruction


// wcmpxchg 
begin instruction 0x202
begin decode 
    operands 3
    hvalue_mask 0
end decode
begin deps
    rw 0
    rw 1
    xu alu 0
    xu alu 0
end deps
begin execute
    chrw 0, rxc UND
    chrw 1, rxc UND
    chrd 2, rxc UND
    chsmp rxc UND
    lxa 0
    rd 0, 0
    rd 0, 0, 1
    rd 1, 1
    rd 1, 1, 1
    rd 2, 2, 1
    xalu andn 0
    xalu pass 1
    staf 0x1, 0
    chfalst 0x1, wr 0, 2, 1
    chfalcl 0x1, wr 1, 0, 1
    uxa 0
end execute
end instruction

// fence
begin instruction 0x203
begin decode
    operands 0
    hvalue_mask 0
end decode 
begin deps
    ser mem
end deps
begin execute
    invldg data
    mpbar
end execute
end instruction

// halt
begin instruction 0x801
begin decode
    operands 0
    hvalue_mask 0
end decode
begin deps
    ser reg, instr, mem
end deps
begin execute
    chxm rxc PROT
    empstat halt
end execute
end instruction

// pcfl
begin instruction 0x802
begin decode
    chxm rxc PROT
    operands 0
    hvalue_mask 0
end decode
begin deps
    ser addr
end deps
begin execute
    chxm rxc PROT
    invldg addr
end execute
end instruction

// flall
begin instruction 0x803
begin decode
    operands 0
    hvalue_mask 0
end decode
begin deps
    ser instr, addr, mem
end deps
begin execute
    chxm rxc PROT
    invldg addr, instr, data
end execute
end instruction

// dflush
begin instruction 0x804
begin decode
    operands 1
    hvalue_mask 0
end decode
begin deps
    ser mem
    rdaddr 0
end deps
begin execute
    chxm rxc PROT
    invldat 0, mem
end execute

// iflush
begin instruction 0x805
begin decode
    operands 1
    hvalue_mask 0
end decode
begin deps
    ser mem
    rdaddr 0
end deps
begin execute
    chxm rxc PROT
    invldat 0, instr
end execute